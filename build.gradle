buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
    gradlePluginPortal()
    maven { url "https://repo.spring.io/plugins-release" }
  }

  dependencies {
    classpath "com.netflix.graphql.dgs.codegen:graphql-dgs-codegen-gradle:${graphql_dgs_spring_boot_starter_version}"
  }
}

plugins {
  id "java"
  id "org.springframework.boot"
  id "io.spring.dependency-management"
  id "com.github.node-gradle.node"
  id "com.netflix.dgs.codegen"
}

group = "io.github.bbortt"
version = "${version}"
description = "I Zite vor Isolation wettme doch zwüschdüri gern mit de Kollege s Büssi zwicke!"

sourceCompatibility = "15"
assert System.properties["java.specification.version"] == "11" || "12" || "13" || "14" || "15"

repositories {
  mavenLocal()
  mavenCentral()
  jcenter()
}

dependencies {
  implementation"com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter:${graphql_dgs_spring_boot_starter_version}"
  implementation "com.netflix.graphql.dgs:graphql-dgs-subscriptions-websockets-autoconfigure:${graphql_dgs_spring_boot_starter_version}"
  implementation "org.springframework.boot:spring-boot-starter-actuator"
  implementation "org.springframework.boot:spring-boot-starter-data-redis"
  implementation "org.springframework.boot:spring-boot-starter-security"
  implementation "org.springframework.boot:spring-boot-starter-web"
  implementation "org.springframework.session:spring-session-data-redis"
  developmentOnly "org.springframework.boot:spring-boot-devtools"
  testImplementation "org.springframework.boot:spring-boot-starter-test"
  testImplementation "io.projectreactor:reactor-test"
}

if (project.hasProperty("prod")) {
  apply from: "gradle/profile_prod.gradle"
}

clean {
  delete "${project.projectDir}/src/main/webapp/build"
}

apply plugin: 'com.netflix.dgs.codegen'
generateJava {
  schemaPaths = ["${projectDir}/src/main/resources/schema"]
  packageName = 'io.github.bbortt.buessle.graph'
}

if (project.hasProperty("nodeInstall")) {
  node {
    version = "${node_version}"
    npmVersion = "${npm_version}"
    download = true
  }
}

processResources {
  from("src/main/webapp/build/") {
    into "public"
  }
}

test {
  useJUnitPlatform()
  exclude "**/*IT*", "**/*IntTest*", "**/*IntegrationTest*"
}
bootJar.dependsOn test

task integrationTest(type: Test) {
  useJUnitPlatform()
  group = "verification"
  include "**/*IT*", "**/*IntTest*", "**/*IntegrationTest*"
}
check.dependsOn integrationTest

wrapper {
  gradleVersion = "6.7"
}
